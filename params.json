{"name":"Pyspikesorter","tagline":"A pure python Spike sorter","body":"#pySpikeSorter\r\n\r\n* A(nother) spike sorting utility capable of helping in the analisis of extracelullar action potential recordings.\r\n* It is inspired by some of the features of the offline sorter software from plexon.\r\n* It is intended to be a completely \"Manual\" solution for spike sorting (old school neurophysiologists don't like automated stuf,\r\n although there is some work to provide and/or interface with automatic clustering algorithms.\r\n* It is far from being complete, but at this moment it is functional.\r\n* I'm not a programmer, so I think there are lots of things that can be improved, that is why any comments aiming at improving it are welcome.\r\n\r\n##Installation Instructions:  \r\n\r\n###Requirements:\r\n* Numpy\r\n* Scipy\r\n* Matplotlib\r\n* PyQt4\r\n* Guidata\r\n* traits\r\n* traitsui\r\n* mayavi\r\n* pytables\r\n* optional: Klustakwik\r\n\r\nTo meet all the requirements is important to have a working python installation.\r\n\r\nIn Debian based linux distributions i.e. **ubuntu** you can do:\r\n\r\n```\r\nsudo apt-get install python-numpy python-scipy python-tables python-guidata python-matplotlib python-traits python-traitsui mavayi2\r\n```\r\n\r\nIn **Windows** it is recomemnded to install a python bundle, for example [PythonXY](https://code.google.com/p/pythonxy/).\r\n\r\nUnder **MacOS** it is recommended to install the [Enthought](https://www.enthought.com/products/canopy/) package, which bundles most of the requirements.\r\nIf you do not want to install enthought, there are guides that can be used to succesfully install python in MAC: [link1](http://powernap.github.io/blog/2012/08/20/install-python-together-with-vtk-using-homebrew-for-mountain-lion/)\r\n, [link2](http://docs.python-guide.org/en/latest/starting/install/osx/)\r\n\r\n###Running pySpikeSorter:\r\n\r\nThere is no installation needed. Just download the files to a known location, and from the command line run:\r\n\r\n```\r\ncd /folder/that/contains/the/files\r\nipython -i pySpikeSorter.py\r\n```\r\n\r\n####Notes:\r\n* It is not required to use ipython, but is more convenient if one wants to explore and intereact with the Spyke Sorter object.  \r\n* If you are going to use ipython, please make sure that it doesn't load any PyQt4 library before loading pySpikeSorter, for example, calling:\r\n\r\n```\r\nipython --pylab=qt -i pySpikeSorter.py\r\n```\r\n\r\nwill not work because in order to use MayaVi (3d visualizatons), there are some tweaks needed to be made before loading PyQt4.\r\n\r\n\r\n##Tutorial:\r\n* A \"test.h5\" file is provided, which can be loaded in the appplication clicking on the green button.\r\n* It should display an overview of the channels\r\n* By clicking a particular channel it gets selected. Clicking the \"Plot Chan\" button plots the data in a specific Tab.\r\n* Under that tab there are aeveral analisys and tools that can be used to sort the data.\r\n\r\n###Video Tutorial:\r\nin progress ...\r\n\r\n##Screenshots:\r\n[![Screenshot 1](screenshots/thumbnails/03.jpg)](screenshots/03.png)\r\n[![Screenshot 2](screenshots/thumbnails/04.jpg)](screenshots/04.png)\r\n[![Screenshot 3](screenshots/thumbnails/06.jpg)](screenshots/06.png)\r\n[![Screenshot 4](screenshots/thumbnails/12.jpg)](screenshots/12.png)\r\n[![Screenshot 5](screenshots/thumbnails/13.jpg)](screenshots/13.png)\r\n\r\n##H5File Definition:\r\npySpikeSorter allows to sort spike events saved in an H5File.\r\nThe package [Neo](http://pythonhosted.org/neo/), makes possible to read data in various formats and transform those into an h5file.\r\nThe excellent package [Pytables](http://www.pytables.org/moin) provides a convenient way to create and manipulate these files.\r\n\r\nTo facilitate the process, a sample h5file with the basic structure is provided. You can examine the internal structure of the files\r\nusing the [viTables](http://vitables.org/) application.\r\nThe h5file basic structure is as follows:\r\n* A group or folder called 'Spikes' (capital 'S')\r\n* Inside, one grou/folder named 'Chan_000', where the zeros are replaced by the channel number. Note that the script asumes there are three integers.\r\n* Inside each channel folder a:\r\n    * 'Waveforms' numpy array, with the shape (events, points)\r\n    * 'Unsorted': numpy array containing the indices of the unsorted events.\r\n    * 'isMultiunit': boolean\r\n    * 'TimeStamp': a numpy vector containing the timestamps (in milliseconds) of the neural events.\r\n    * 'isTrash': Boolean.\r\n    \r\n##To do List:\r\n* Tetrodes implementation.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}